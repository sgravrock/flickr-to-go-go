// This file was generated by counterfeiter
package authfakes

import (
	"sync"

	"github.com/sgravrock/flickr-to-go-go/auth"
)

type FakeUiAdapter struct {
	PromptForAccessCodeStub        func(url string) (string, error)
	promptForAccessCodeMutex       sync.RWMutex
	promptForAccessCodeArgsForCall []struct {
		url string
	}
	promptForAccessCodeReturns struct {
		result1 string
		result2 error
	}
}

func (fake *FakeUiAdapter) PromptForAccessCode(url string) (string, error) {
	fake.promptForAccessCodeMutex.Lock()
	fake.promptForAccessCodeArgsForCall = append(fake.promptForAccessCodeArgsForCall, struct {
		url string
	}{url})
	fake.promptForAccessCodeMutex.Unlock()
	if fake.PromptForAccessCodeStub != nil {
		return fake.PromptForAccessCodeStub(url)
	} else {
		return fake.promptForAccessCodeReturns.result1, fake.promptForAccessCodeReturns.result2
	}
}

func (fake *FakeUiAdapter) PromptForAccessCodeCallCount() int {
	fake.promptForAccessCodeMutex.RLock()
	defer fake.promptForAccessCodeMutex.RUnlock()
	return len(fake.promptForAccessCodeArgsForCall)
}

func (fake *FakeUiAdapter) PromptForAccessCodeArgsForCall(i int) string {
	fake.promptForAccessCodeMutex.RLock()
	defer fake.promptForAccessCodeMutex.RUnlock()
	return fake.promptForAccessCodeArgsForCall[i].url
}

func (fake *FakeUiAdapter) PromptForAccessCodeReturns(result1 string, result2 error) {
	fake.PromptForAccessCodeStub = nil
	fake.promptForAccessCodeReturns = struct {
		result1 string
		result2 error
	}{result1, result2}
}

var _ auth.UiAdapter = new(FakeUiAdapter)
